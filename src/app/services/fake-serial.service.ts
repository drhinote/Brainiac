import { Injectable } from '@angular/core';

@Injectable()
export class FakeSerialService {

  constructor() { }

  dataAvailable: Function;

  writeHex(data: string, onSucess: Function, onFail: Function) {
    if(data == "AA0200008B2A") {
       

      setTimeout(this.dataAvailable([79, 127, 10, 168, 129, 100, 10, 128, 198, 175, 151, 252, 136, 157, 186, 122, 157, 166, 63, 83, 45, 49, 56, 77, 45, 65, 48, 48, 54, 55, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]));
    } else {
  setTimeout(    
this.dataAvailable([192, 15, 255, 208, 55, 1, 144, 60, 0, 192, 14, 255, 192, 54, 1, 16, 60, 0, 48, 16, 255, 192, 53, 1, 192, 60, 0, 112, 17, 255, 176, 55, 1, 112, 61, 0, 80, 18, 255, 240, 55, 1, 48, 61, 0, 32, 17, 255, 144, 54, 1, 112, 61, 0, 112, 16, 255, 192, 54, 1, 176, 58, 0, 64, 16, 255, 192, 53, 1, 208, 58, 0, 80, 16, 255, 16, 55, 1, 0, 60, 0, 160, 15, 255, 144, 53, 1, 112, 59, 0, 240, 16, 255, 192, 53, 1, 48, 60, 0, 64, 16, 255, 224, 53, 1, 192, 59, 0, 96, 16, 255, 112, 54, 1, 0, 59, 0, 80, 15, 255, 0, 55, 1, 208, 58, 0, 16, 16, 255, 32, 56, 1, 224, 57, 0, 0, 17, 255, 224, 55, 1, 0, 58, 0, 160, 17, 255, 160, 56, 1, 192, 59, 0, 80, 16, 255, 176, 54, 1, 32, 59, 0, 32, 15, 255, 176, 53, 1, 160, 58, 0, 16, 15, 255, 48, 55, 1, 48, 58, 0, 16, 15, 255, 112, 54, 1, 224, 59, 0, 240, 15, 255, 0, 55, 1, 240, 59, 0, 0, 17, 255, 144, 54, 1, 240, 60, 0, 80, 17, 255, 80, 54, 1, 48, 61, 0, 112, 17, 255, 224, 53, 1, 176, 60, 0, 112, 17, 255, 208, 54, 1, 208, 59, 0, 112, 17, 255, 80, 55, 1, 160, 58, 0, 0, 17, 255, 0, 55, 1, 224, 59, 0, 144, 16, 255, 240, 54, 1, 32, 61, 0, 48, 16, 255, 32, 55, 1, 96, 60, 0, 112, 16, 255, 144, 54, 1, 176, 60, 0, 128, 16, 255, 32, 54, 1, 192, 57, 0, 64, 17, 255, 208, 54, 1, 0, 60, 0, 128, 17, 255, 176, 54, 1, 48, 61, 0, 160, 16, 255, 16, 55, 1, 96, 59, 0, 176, 16, 255, 32, 55, 1, 0, 59, 0, 176, 16, 255, 96, 54, 1, 224, 56, 0, 224, 16, 255, 80, 54, 1, 240, 57, 0, 48, 17, 255, 80, 54, 1, 96, 58, 0, 96, 16, 255, 144, 54, 1, 112, 57, 0, 80, 15, 255, 160, 55, 1, 80, 57, 0, 176, 15, 255, 32, 55, 1, 176, 58, 0, 128, 16, 255, 48, 55, 1, 240, 58, 0, 16, 16, 255, 64, 55, 1, 32, 59, 0, 176, 16, 255, 32, 55, 1, 224, 58, 0, 176, 15, 255, 0, 55, 1, 64, 60, 0, 176, 15, 255, 112, 54, 1, 208, 58, 0, 48, 17, 255, 48, 54, 1, 0, 58, 0, 96, 16, 255, 208, 53, 1, 16, 58, 0, 128, 16, 255, 48, 53, 1, 176, 60, 0, 144, 16, 255, 240, 54, 1, 128, 60, 0, 208, 16, 255, 112, 54, 1, 0, 61, 0, 144, 15, 255, 224, 55, 1, 64, 61, 0, 160, 15, 255, 160, 55, 1, 240, 59, 0, 64, 15, 255, 80, 55, 1, 192, 57, 0, 112, 15, 255, 0, 55, 1, 0, 58, 0, 144, 15, 255, 240, 53, 1, 80, 58, 0, 224, 15, 255, 160, 55, 1, 128, 58, 0, 16, 18, 255, 112, 55, 1, 192, 58, 0, 208, 16, 255, 128, 54, 1, 16, 60, 0, 144, 15, 255, 176, 54, 1, 176, 60, 0, 64, 16, 255, 0, 54, 1, 144, 58, 0, 32, 17, 255, 16, 54, 1, 192, 59, 0, 240, 15, 255, 128, 54, 1, 128, 61, 0, 0, 16, 255, 48, 55, 1, 96, 59, 0, 112, 17, 255, 16, 56, 1, 16, 59, 0, 192, 17, 255, 176, 54, 1, 0, 61, 0, 112, 18, 255, 192, 54, 1, 96, 59, 0, 208, 17, 255, 64, 56, 1, 128, 58, 0, 144, 17, 255, 160, 54, 1, 160, 58, 0, 80, 17, 255, 80, 54, 1, 112, 59, 0, 224, 15, 255, 80, 54, 1, 240, 60, 0, 240, 15, 255, 48, 54, 1, 240, 58, 0, 208, 16, 255, 160, 53, 1, 16, 59, 0, 160, 16, 255, 224, 54, 1, 112, 59, 0, 192, 16, 255, 208, 54, 1, 144, 58, 0, 128, 16, 255, 160, 55, 1, 192, 59, 0, 32, 17, 255, 192, 55, 1, 144, 59, 0, 80, 16, 255, 240, 55, 1, 16, 59, 0, 32, 16, 255, 112, 55, 1, 16, 60, 0, 144, 16, 255, 80, 54, 1, 0, 59, 0, 0, 17, 255, 208, 54, 1, 96, 57, 0, 192, 15, 255, 128, 55, 1, 192, 59, 0, 64, 15, 255, 112, 55, 1, 224, 59, 0, 160, 16, 255, 144, 54, 1, 0, 59, 0, 64, 17, 255, 32, 55, 1, 112, 58, 0, 192, 17, 255, 112, 55, 1, 48, 60, 0, 144, 16, 255, 96, 55, 1, 32, 60, 0, 16, 17, 255, 0, 55, 1, 32, 60, 0, 80, 17, 255, 64, 54, 1, 144, 59, 0, 16, 18, 255, 192, 55, 1, 32, 59, 0, 16, 16, 255, 128, 54, 1, 176, 58, 0, 192, 16, 255, 240, 53, 1, 48, 58, 0, 32, 17, 255, 32, 54, 1, 224, 59, 0, 0, 17, 255, 32, 55, 1, 0, 59, 0, 224, 16, 255, 32, 55, 1, 240, 59, 0, 144, 16, 255, 128, 55, 1, 0, 58, 0, 0, 16, 255, 112, 55, 1, 144, 55, 0, 16, 16, 255, 176, 54, 1, 192, 59, 0, 176, 16, 255, 112, 54, 1, 192, 60, 0, 48, 16, 255, 208, 53, 1, 160, 59, 0, 224, 15, 255, 128, 54, 1, 64, 60, 0, 176, 14, 255, 192, 53, 1, 208, 58, 0, 0, 15, 255, 48, 55, 1, 192, 59, 0, 160, 15, 255, 144, 54, 1, 160, 59, 0, 16, 16, 255, 64, 55, 1, 48, 60, 0, 32, 16, 255, 0, 55, 1, 176, 60, 0, 32, 16, 255, 64, 55, 1, 96, 59, 0, 176, 15, 255, 32, 55, 1, 96, 58, 0, 0, 16, 255, 16, 54, 1, 208, 59, 0, 64, 16, 255, 224, 54, 1, 64, 60, 0, 128, 16, 255, 0, 55, 1, 48, 60, 0, 128, 16, 255, 224, 54, 1, 192, 59, 0, 80, 17, 255, 240, 54, 1, 224, 57, 0, 48, 17, 255, 16, 56, 1, 144, 57, 0, 160, 17, 255, 128, 54, 1, 112, 60, 0, 96, 18, 255, 16, 54, 1, 160, 59, 0, 48, 16, 255, 32, 55, 1, 192, 59, 0, 224, 16, 255, 48, 54, 1, 192, 57, 0, 176, 15, 255, 240, 54, 1, 32, 59, 0, 32, 15, 255, 208, 54, 1, 240, 58, 0, 208, 14, 255, 240, 53, 1, 208, 58, 0, 144, 16, 255, 192, 53, 1, 208, 58, 0, 32, 18, 255, 144, 53, 1, 144, 59, 0, 0, 17, 255, 128, 55, 1, 160, 58, 0, 0, 16, 255, 192, 54, 1, 208, 58, 0, 240, 15, 255, 112, 54, 1, 112, 58, 0, 16, 16, 255, 80, 55, 1, 32, 59, 0]),60);
    }
    onSucess();
  }

  requestPermission(onSucess: Function, onFail: Function) {
    onSucess();
  }

  open(options: any, onSucess: Function, onFail: Function) {
    onSucess();
  }

  registerReadCallback(onSucess: Function, onFail: Function) {
    this.dataAvailable = onSucess;
  }

}